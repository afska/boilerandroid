apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.j3solutions.boilerandroid"
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
//            storeFile file("key.keystore")
//            storePassword "password"
//            keyAlias "alias"
//            keyPassword "password"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "api"
    productFlavors {
        staging {
            buildConfigField "String", "BASE_API_URL", '"https://stage.test.com/v1/"'
            resValue "string", "app_name", "Boilerandroid Staging"
            buildConfigField 'boolean', 'IS_STAGING', 'true'
        }
        prod {
            resValue "string", "app_name", "Boilerandroid"
            buildConfigField "String", "BASE_API_URL", '"https://gist.githubusercontent.com/rodri042/6e2d1ac8c8a9ecfa6cd10bbed4ac9389/raw/353744e46c8d12a21b59353b9b0c5486429b4964/"'
            buildConfigField 'boolean', 'IS_STAGING', 'false'
        }
    }


    sourceSets {
        main {
            res.srcDirs = [
                    file("src/main/res/layouts/").listFiles(),
                    "src/main/res"
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    //KTLINT
    ktlint "com.pinterest:ktlint:0.33.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--verbose", "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

check.dependsOn ktlintFormat

apply from: rootProject.file('app/dependencies.gradle')
